version: "3.8"

services:
  admin:
    build:
      context: ./tutors_assistant
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn admin.config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./tutors_assistant:/tutors_assistant/
      - static_volume:/tutors_assistant/static
      - media_volume:/tutors_assistant/media
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - postgres

  bot:
    build:
      context: ./tutors_assistant
    command: >
      sh -c "python manage.py bot_start"
    env_file:
      - ./.env
    depends_on:
      - postgres
      - admin
    volumes:
      - ./tutors_assistant:/tutors_assistant/

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: ${HOSTNAME_RABBITMQ}
    ports:
      - 5672:${PORT_RABBITMQ}
      - 15672:15672

  rabbitmq_consumer:
    build:
      context: ./tutors_assistant
    command: >
      sh -c "python consumer.py"
    env_file:
      - ./.env
    restart: always
    depends_on:
      - bot
      - rabbitmq
    volumes:
      - ./tutors_assistant:/tutors_assistant/

  redis:
    image: redis:7.0.0-alpine
    ports:
    - 6378:6379
    volumes:
      - ./redisdata:/tutors_assistant/redisdata

  postgres:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - ./.env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      - static_volume:/tutors_assistant/static
      - media_volume:/tutors_assistant/media
    depends_on:
      - admin

volumes:
  postgres_data:
  media_volume:
  static_volume:
